# This workflow will execute on a push to main and will .....
# 1) Run on a windows environment
# 2) Install Python 3.9.13
# 3) Install the dependencies
# 4) Run flake8 
# 5) Run all test scripts
# On success of Linting and Testing
# 6) Create a built distribution
# 7) Upload the PyPi


name: crbutils_CI

on:
  push:
    branches: [ main ]


jobs:
  build:

    # runs-on: ubuntu-latest
    runs-on: windows-latest

    steps:
    # Checkout the repo
    - uses: actions/checkout@v3     
    
    # Setup the nevironment
    - name: Set up Python 3.9.13
      uses: actions/setup-python@v4     
      with:
        python-version: 3.9.13
    
    # Install dependencies required for this workflow
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest poetry toml
        
    # Run the Flake8 linter
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    # Run PyTest
    # This fails without code to test 
    # Exit code 5. No tests were collected.
    - name: Test with pytest
      run: python -m pytest -vv

    # Run Poetry to build the wheel
    - name: Create wheel with poetry
      run: poetry build --format wheel

    # Run Poetry to publish the wheel to PyPi
    # https://docs.github.com/en/actions/security-guides/encrypted-secrets
    - name: Publish to PyPi
      run: poetry publish --username "${{ secrets.UNAME }}" --password "${{ secrets.PWORD }}"